<section xmlns:xi="http://www.w3.org/2001/XIncludes" xml:id="s_walks_basics">
<title>Walks: the basics</title>
<intro>
<p>If the edges in a graph <m>\Gamma</m> represent connections between different cities, it is obvious to strart planning longer trips that compose several of these connections.  The notion of a <em>walk</em> formally captures this definition; the formal notions of <em>path</em> and <em>trail</em> further ask that we not double back on ourselves or repeat ourselves in certain formally defined ways.</p>

<p>Once we've done that, we investigate what it means for a graph to be connected or disconnected.</p>

</intro>

<subsection><title>Walks and connectedness</title>
<p>Before we see the formal definition of a walk, it will be useful to see an example:</p>
<figure xml:id="fig_walkdrawing"> <caption>Example of a walk</caption>
<image width="70%" source="images/walkdrawing.png" />
</figure>
<p>In the graph shown, the vertices are labelled with letters, and the edges are labelled with numbers, and we have a walk highlighted in red, and with arrowtips drawn on the edges.  Starting from vertex <m>A</m>, we can take edge 6 to vertex <m>D</m>, and then edge 5 to vertex <m>C</m>, edge 5 to vertext <m>F</m>, edge 3 back to vertex <m>D</m>, and finally edge 8 to vertex <m>E</m>. Intuitively,then, a walk strings together several edges that share vertices in between.  Makign that formal, we have the following.</p>

<definition><title>Walk</title><p><m>walk</m> in a graph <m>\Gamma</m> is a sequence </p>

<me>v_0, e_1, v_1,e_2, v_2,\dots, v_{n-1}, e_n, v_n</me>

<p>where the <m>v_i</m> are vertices, the <m>e_j</m> are edges, and the edge <m>e_j</m> goes between vertices <m>v_{j-1}</m> and <m>v_j</m>.</p>

<p>We say that the walk is between vertices <m>a=v_0</m> and <m>b=v_n</m></p>
</definition>

<p>In this notation, the walk in <xref ref="fig_walkdrawing" /> goes from <m>A</m> to <m>E</m>, and would be written <m>A, 6, D, 4, C, 5, F, 3, D, 8, E</m>.  The visual representation of the walk on the graph is vastly more intuitive, the written one feeling cumbersome in comparison.</p>

<p>The definition of walk above contains some extra information.  If we just know the sequence of edges we can reconstruct what the vertices have to be (assuming we have at least two edges in the walk).  Alternatively, if the graph <m>\Gamma</m> does not have multiple edges, it is enough to just know the vertices <m>v_i</m>, but if <m>\Gamma</m> has multiple edges that just knowing the vertices does not determine the walk.</p>


<definition><title>Connected</title> <p>We say a graph <m>\Gamma</m> is <em>connected</em> if for any two vertices <m>v,w</m>, there is a walk from <m>v</m> to <m>w</m> in <m>\Gamma</m>.</p></definition>




<definition><title>Disjoint union</title>
<p>Given two graphs <m>\Gamma_1</m> and <m>\Gamma_2</m>, the <em>disjoint union</em> <m>\Gamma_1\sqcup \Gamma_2</m> is obtained by taking the disjoint union of both the vertices and edges of <m>\Gamma_1</m> and <m>\Gamma_2</m>.  So <m>\Gamma_1\sqcup\Gamma_2</m> consists of a copy of <m>\Gamma_1</m> and a copy of <m>\Gamma_2</m>, with no edges in between the two graphs.</p></definition>

<definition><title>Disconnected</title>
<p>
A graph <m>\Gamma</m> is <em>disconnected</em> if we can write <m>\Gamma=\Gamma_1\sqcup \Gamma_2</m> for two proper (i.e., not all of <m>\Gamma</m>) subgraphs <m>\Gamma_1</m> and <m>\Gamma_2</m>. </p></definition>

<p>We now have a definition for what it means for a graph to be connected, and another for what it means for a graph to be disconnected.  From everday usage of this words, we would certainly hope that a graph is disconnected if and only if it is not connected.  However, it is not immediately clear from the definitions as written that this is the case.</p>

<lemma>
<p>The following are equivalent:</p>
<ol><li>. <m>\Gamma</m> is connected</li>
<li> <m>\Gamma</m> is not disconnected</li>
</ol>
</lemma>



<proof>
<p>1 implies 2: Supppose that <m>\Gamma</m> is connected, and let <m>v, w\in V(\Gamma)</m>; we want to show that there is a walk from <m>v</m> to <m>w</m>.</p> 

<p>Define <m>S\subset V(\Gamma)</m> to be the set of all vertices <m>u\in V(\Gamma)</m> so that there is a walk from <m>v</m> to <m>u</m>; we want to show that <m>w\in S</m>.</p>

<p>First, observe that there are no edges from <m>S</m> to <m>V(\Gamma)\setminus S</m>.  Suppose that <m>e</m> was an edge between <m>a\in S</m> and <m>b\in\Gamma\setminus S</m>.  Since <m>a\in S</m>, by the definition of <m>S</m> there is a walk <m>v=v_0v_1v_2\cdots v_m=a</m> from <m>v</m> to <m>a</m>.  We can add the edge <m>e</m> to the end of the walk, to get a walk from <m>v</m> to <m>b</m>, and hence by definition <m>b\in S</m>.  </p>

<p>Now suppose that <m>w\notin S</m>.  Then <m>S</m> and <m>V(\Gamma)\setminus S</m> are both nonempty, and by the above there are no edges between them, and so <m>\Gamma</m> is not connected, a contradiction.</p>

<p>To prove 2 implies 1, we prove the contrapositive.  If <m>\Gamma</m> is not connected, then there are two vertices <m>v,w\in V(\Gamma)</m> so that there is no walk from <m>v</m> to <m>w</m>. </p>

<p>Suppose that <m>\Gamma=\Gamma_1\sqcup\Gamma_2</m>, and pick <m>v\in V(\Gamma_1), w\in V(\Gamma_2)</m>.  Any walk from <m>v</m> to <m>w</m> starts in <m>V(\Gamma_1)</m> and ends in <m>V(\Gamma_2)</m>, and so at some point there must be an edge from a vertex in <m>\Gamma_1</m> to a vertex in <m>\Gamma_2</m>, but there are no such edges <m>\square</m></p>
</proof>

</subsection>
<subsection><title>Types of Walks</title>

<p>Many questions in graph theory ask whether or not a walk of a certain type exists on a graph: we introduce some notation that will be needed for these questions.</p>
 

<definition><p>We say a walk is <em>closed</em> if it starts and ends on the same vertex; i.e., <m>v_0=v_n</m>.  The <em>length</em> of a walk is <m>n</m>, the number of edges in it.  The <em>distance</em> between two vertices <m>v</m> and <m>w</m> is the length of the shortest walk from <m>v</m> to <m>w</m>, if one exists, and <m>\infty</m> if one does not exist.</p></definition>

<p>It is sometimes convenient to have terminology for walks that don't backtrack on themselves:</p>

<definition>
<ol><li>  If the edges <m>e_i</m> of the walk are all distinct, we call it a <em>trail</em></li>
<li> If the vertices <m>v_i</m> of the walk are all distinct (except possibly <m>v_0=v_m</m>), we call the walk a <em>path</em>.  The exception is to allow for the possibility of closed paths.</li></ol></definition>

<lemma><p>Let <m>v,w\in V(\Gamma)</m>.  The following are equivalent:</p>
<ol>
<li>There is a walk from <m>v</m> to <m>w</m> </li>
<li> There is a trail from <m>v</m> to <m>w</m></li>
<li> There is a path from <m>v</m> to <m>w</m>.</li>
</ol></lemma>

<proof><p>Obviously, 3 implies 2 which implies 1, as any path is a trail, and any trail is a walk.  </p>

<p>That 1 implies 3 is intuitively obvious: if you repeat a vertex, then you've visited someplace twice, and weren't taking the shortest route.  Let's make this argument mathematically precise.</p>

<p>Suppose we have a walk <m>v=v_0,e_1,\dots, e_m, v_m=w</m> that is not a path.  Then, we must repeat some vertex, say <m>v_i=v_k</m>, with <m>i\lt k</m>.  Then we can cut out all the vertices and edges between <m>v_i</m> and <m>v_k</m> to obtain a new walk </p>

<me>v=v_0,e_1, v_1,\dots, e_i, v_i, e_{k+1}, v_{k+1}, e_{k+2}, v_{k+2}, \dots, v_m</me>

<p>Since <m> i \lt k </m>, the new walk is strictly shorter than our original walk.  Since the length of a walk is finite, if we iterate this process the result must eventually terminate.  That means all our vertices are distinct, and hence is a path.</p></proof>



</subsection>
</section>


